package syscall;

message TraceHeader {
  enum TraceMagic {
    TRACE_MAGIC = 0x0badb00b;
  }

  enum TargetOS {
    ProfileUnknown      = 0;
    ProfileWindowsXPSP0 = 1;
    ProfileWindowsXPSP1 = 2;
    ProfileWindowsXPSP2 = 3;
    ProfileWindowsXPSP3 = 4;
    ProfileWindows7SP0  = 5;
  }

  required fixed32 magic = 1;
  required uint64 timestamp = 2;
  required TargetOS targetos = 3;

  // Does the trace provide taint information?
  required bool hastaint = 4;
}

message Syscall {
  message Process {
    required uint64 pid  = 1;
    required uint64 tid  = 2;
    optional string name = 3;
  }

  required uint64 id       = 1;
  required uint64 sysno    = 2;
  required uint64 retval   = 3;
  required Process process = 4;
  repeated SyscallArg arg  = 5;

  // Optional external data references, not belonging to any argument
  repeated ExternalReference ref = 6;
}

message DataInterval {
  required uint64 offset = 1;
  required bytes  data   = 2;
}

message SyscallArg {
  // Argument address
  required uint64 addr = 1;

  // Argument input data stream (i.e., input arguments)
  repeated DataInterval indata  = 2;

  // Argument output data stream (i.e., output arguments)
  repeated DataInterval outdata = 3;

  // Argument direction (IN, OUT or IN/OUT)
  enum Direction {
       IN    = 0;
       OUT   = 1;
       INOUT = 2;
  }
  required Direction direction = 4;

  // Argument offset inside parent data stream
  required int32  offset   = 5;

  // Pointers to sub-arguments
  repeated SyscallArg ptr  = 6;

  // Taint information for this argument
  repeated uint32 taintlabels = 7;
}

// External data pointers, referenced during syscall execution but not
// belonging to any syscall argument
message ExternalReference {
  required uint64 pc    = 1;
  required uint64 addr  = 2;
  required uint64 value = 3;
}
